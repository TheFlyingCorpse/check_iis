// Monitoring Inventoried Sites
//apply Service "IIS Site " for (name => config in host.vars.inv.iis.site) {
//  import "generic-service"
//
//  check_command = "check_iis"
//
//  vars += config
//  vars.iis_check_sites = true
//  vars.iis_included_sites = vars.Name
//  vars.iis_perfcounter_sites = true
//  vars.iis_expected_state = vars.State
//  vars.iis_split_by = ","
//  vars.iis_single_check = true
//}

// Monitoring Sites as a group
//apply Service "IIS Sites"{
//  import "generic-service"
//
//  check_command = "check_iis"
//
//  assign where host.name == NodeName
//
//  vars.iis_check_sites = true
//  vars.iis_perfcounter_sites = true
//  vars.iis_verbose = true
//}

// Monitoring Inventoried AppPools
//apply Service "IIS AppPool " for (name => config in host.vars.inv.iis.apppool) {
//  import "generic-service"
//
//  check_command = "check_iis"
//
//  vars += config
//  vars.iis_check_apppools = true
//  vars.iis_included_apppools = vars.Name
//  vars.iis_perfcounter_apppools = true
//  vars.iis_expected_state = vars.State
//  vars.iis_split_by = ","
//  vars.iis_single_check = true
//}

// Monitoring AppPools as a group
//apply Service "IIS AppPools"{
//  import "generic-service"
//
//  check_command = "check_iis"
//
//  assign where host.name == NodeName
//
//  vars.iis_check_apppools = true
//  vars.iis_perfcounter_apppools = true
//  vars.iis_verbose = true
//}

// Do not touch anything below this comment.
object CheckCommand "check_iis" {
	import "plugin-check-command"

	command = [ PluginDir + "/check_iis.exe" ]

	arguments = {
		"--inventory-websites" = {
			set_if = "$iis_inventory_sites$"	
			description = "Switch to use to provide inventory of Sites"
		}
		"--inventory-apppools" = {
			set_if = "$iis_inventory_apppools$"	
			description = "Switch to use to provide inventory of AppPools"
		}
		"--check-websites" = {
			set_if = "$iis_check_sites$"
			description = "Switch to use to check the health status of the local Sites"
		}
		"--check-apppools" = {
			set_if = "$iis_check_apppools$"
			description = "Switch to use to check the health status of the local Sites"
		}
		"--inv-level" = {
			value = "$iis_inventory_level$"
			description = "Argument to change the level of output. Default is 'normal', available options are 'normal','full'"
		}
		"--inv-format" = {
			value = "$iis_inventory_format$"
			description = "Argument to provide output of the inventory in other formats, valid options are 'readable', 'i2conf' and 'json'"
		}
		"--excluded-sites" = {
			value = "$iis_excluded_sites$"
			description = "Excludes Sites from checks and inventory"
		}
		"--included-sites" = {
			value = "$iis_included_sites$"
			description = "Includes Sites to check while all other Sites are excluded, affects both checks and inventory"
		}
		"--stopped-sites" = {
			value = "$iis_stopped_sites$"
			description = "The specified Sites are checked that they are stopped"
		}
		"--warn-sites" = {
			value = "$iis_warn_sites$"
			description = "These specified Sites will return Warning if they are not in the expected state"
		}
		"--perfcounter-sites" = {
			set_if = "$iis_perfcounter_sites$"	
			description = "Switch to use to get perfcounters from Sites"
		}
		"--perfdata-bytes" = {
			set_if = "$iis_perfdata_mbytes$"	
			description = "Switch to use to get perfdata as MBytes rather than bytes"
		}
		"--excluded-apppools" = {
			value = "$iis_excluded_apppools$"
			description = "Excludes AppPools from checks and inventory"
		}
		"--included-apppools" = {
			value = "$iis_included_apppools$"
			description = "Includes AppPools to check while all other AppPools are excluded, affects both checks and inventory"
		}
		"--stopped-apppools" = {
			value = "$iis_stopped_apppools$"
			description = "The specified AppPools are checked that they are stopped"
		}
		"--warn-apppools" = {
			value = "$iis_warn_apppools$"
			description = "The specified AppPools will return Warning if they are not in the expected state"
		}
		"--perfcounter-apppools" = {
			set_if = "$iis_perfcounter_apppools$"	
			description = "Switch to use to get perfcounters from AppPools"
		}
		"--skip-empty-apppools" = {
			set_if = "$iis_skip_empty_apppools$"	
			description = "Switch which sets do not check or inventory AppPools which are empty"
		}
		"--hide-long-output" = {
			set_if = "$iis_hide_long_output$"	
			description = "Switch to hide the long service output, only prints the summary output and any Sites or AppPools deviating from 'OK'"
		}
		"--expected-state" = {
			set_if = "$iis_single_check$"	
			value = "$iis_expected_state$"
			description = "Argument to provide the expected State of the AppPool or Site, used together with --single-check"
		}
		"--icinga2" = {
			set_if = "$iis_icinga2$"	
			description = "Switch used in the Icinga2 CommandDefinition, returns output and perfcounter to the correct class. Do not use via command line"
		}
		"--single-check" = {
			set_if = "$iis_single_check$"	
			description = "Switch used together with the Icinga2 Auto Apply rules, this is set when there is a single Site or AppPool to check. Do take great care if you use this outside of the auto apply rules"
		}
		"--split-by" = {
			value = "$iis_split_by$"
			description = "Argument used to specify what splits all Sites and AppPool arguments. Default is a single space, ' '"
		}
		"--inv-hide-empty" = {
			set_if = "$inv_hide_empty_vars$"	
			description = "Switch to hide empty vars from inventory output."
		}
		"--inv-running-only" = {
			set_if = "$iis_inv_running_only$"	
			description = "Switch to only inventory running Sites and/or AppPools, depending on what has been selected for inventory"
		}
		"--verbose" = {
			set_if = "$iis_verbose$"
			description = "Switch to use when trying to figure out why a service is not included, excluded or similarly when the returned output is not as expected"
		}
	}
	vars.iis_inventory_sites = false
	vars.iis_inventory_apppools = false
	vars.iis_check_sites = false
	vars.iis_check_apppools = false
	//vars.iis_inventory_level = "normal"
	//vars.iis_inventory_format = "i2conf"
	//vars.iis_excluded_sites = ""
	//vars.iis_included_sites = ""
	//vars.iis_stopped_sites = ""
	//vars.iis_warn_sites = ""
	vars.iis_perfcounter_sites = false
	vars.iis_perfdata_mbytes = false
	//vars.iis_excluded_apppools = ""
	//vars.iis_included_apppools = ""
	//vars.iis_stopped_apppools = ""
	//vars.iis_warn_apppools = ""
	vars.iis_perfcounter_apppools = false
	vars.iis_skip_empty_apppools = false
	vars.iis_hide_long_output = false
	vars.iis_expected_state = "Started"
	vars.iis_icinga2 = false
	vars.iis_single_check = false
	vars.iis_split_by = false
	vars.iis_inv_hide_empty_vars = false
	vars.iis_inv_running_only = false
	vars.iis_verbose = false
	
}